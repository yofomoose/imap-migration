#!/bin/bash

MAX_PARALLEL=5
COUNTER=0
LOG_DIR="./logs"
ACCOUNTS_FILE="accounts.txt"
TEMP_AUTH_OK="auth_ok.tmp"
TEMP_AUTH_FAIL="auth_fail.tmp"

mkdir -p "$LOG_DIR"
> "$TEMP_AUTH_OK"
> "$TEMP_AUTH_FAIL"

echo "üõ† –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &>/dev/null; then
    echo "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    apt update && apt install -y docker.io || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker"; exit 1; }
fi

echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ imapsync..."
if ! docker image inspect gilleslamiral/imapsync &>/dev/null; then
    echo "–û–±—Ä–∞–∑ imapsync –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞—é..."
    docker pull gilleslamiral/imapsync
fi

echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ $ACCOUNTS_FILE..."
if [[ ! -f "$ACCOUNTS_FILE" ]]; then
    echo "–§–∞–π–ª $ACCOUNTS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω."
    echo '"src_email","src_imap","src_pass","dst_email","dst_pass","dst_imap"' > "$ACCOUNTS_FILE"
    exit 0
fi

echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
while IFS=, read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP; do
    SRC_EMAIL=$(echo "$SRC_EMAIL" | tr -d '"')
    DST_EMAIL=$(echo "$DST_EMAIL" | tr -d '"')

    docker run --rm gilleslamiral/imapsync \
        --host1 "$SRC_IMAP" --user1 "$SRC_EMAIL" --password1 "$SRC_PASS" \
        --host2 "$DST_IMAP" --user2 "$DST_EMAIL" --password2 "$DST_PASS" \
        --justconnect --nosslcheck > /dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        echo "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: $SRC_EMAIL"
        echo "$SRC_EMAIL" >> "$TEMP_AUTH_OK"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $SRC_EMAIL"
        echo "$SRC_EMAIL" >> "$TEMP_AUTH_FAIL"
    fi
done < <(tail -n +2 "$ACCOUNTS_FILE") # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫

echo
echo "üìã –£—Å–ø–µ—à–Ω—ã–µ: $(wc -l < "$TEMP_AUTH_OK")"
echo "üõë –û—à–∏–±–∫–∏: $(wc -l < "$TEMP_AUTH_FAIL")"
if [[ -s "$TEMP_AUTH_FAIL" ]]; then
    echo "–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏:"
    cat "$TEMP_AUTH_FAIL"
fi

read -p "‚è≠ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å? (y/n): " CONFIRM
[[ "$CONFIRM" != "y" ]] && exit 0

START_TIME=$(date +%s)
echo "üïí –ù–∞—á–∞–ª–æ: $(date)"

function migrate_mailbox() {
    local SRC_EMAIL=$1 SRC_IMAP=$2 SRC_PASS=$3
    local DST_EMAIL=$4 DST_PASS=$5 DST_IMAP=$6

    local LOG_FILE="$LOG_DIR/$(echo "$SRC_EMAIL" | tr '@' '_' | tr '.' '_').log"

    echo "üöÄ –°—Ç–∞—Ä—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞: $SRC_EMAIL -> $DST_EMAIL"

    docker run --rm \
        -v "$(pwd)/$LOG_DIR:/tmp/logs" \
        gilleslamiral/imapsync \
        --host1 "$SRC_IMAP" --user1 "$SRC_EMAIL" --password1 "$SRC_PASS" \
        --host2 "$DST_IMAP" --user2 "$DST_EMAIL" --password2 "$DST_PASS" \
        --automap --skipcrossduplicates --useuid --nofoldersizes \
        --logfile "/tmp/logs/$(basename "$LOG_FILE")" \
        --log --debugcontent > /dev/null &

    echo "üîÑ [$$] –ü–µ—Ä–µ–Ω–æ—Å: $SRC_EMAIL -> $DST_EMAIL"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–µ—Ä–µ–Ω–æ—Å–∞
while IFS=, read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP; do
    SRC_EMAIL=$(echo "$SRC_EMAIL" | tr -d '"')
    DST_EMAIL=$(echo "$DST_EMAIL" | tr -d '"')
    SRC_IMAP=$(echo "$SRC_IMAP" | tr -d '"')
    SRC_PASS=$(echo "$SRC_PASS" | tr -d '"')
    DST_IMAP=$(echo "$DST_IMAP" | tr -d '"')
    DST_PASS=$(echo "$DST_PASS" | tr -d '"')

    if grep -q "$SRC_EMAIL" "$TEMP_AUTH_OK"; then
        migrate_mailbox "$SRC_EMAIL" "$SRC_IMAP" "$SRC_PASS" "$DST_EMAIL" "$DST_PASS" "$DST_IMAP"
        ((COUNTER++))
        if (( COUNTER % MAX_PARALLEL == 0 )); then
            wait
        fi
    fi
done < <(tail -n +2 "$ACCOUNTS_FILE")

wait

END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))
echo "‚úÖ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è –≤—Å–µ—Ö —è—â–∏–∫–æ–≤. –í—Ä–µ–º—è: $DURATION —Å–µ–∫ (~$((DURATION / 60)) –º–∏–Ω)"
