#!/bin/bash

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
MAX_PARALLEL=5
COUNTER=0

ACCOUNTS_FILE="accounts.txt"
LOG_DIR="logs"
AUTH_LOG="auth_check.log"
TRANSFER_LOG="transfer_progress.log"
ERROR_LOG="errors.log"

mkdir -p "$LOG_DIR"
> "$AUTH_LOG"
> "$TRANSFER_LOG"
> "$ERROR_LOG"

echo "üîç –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $(date)"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
check_auth() {
    local EMAIL="$1"
    local HOST="$2"
    local PASS="$3"

    expect <<EOF >> "$AUTH_LOG"
        log_user 0
        spawn openssl s_client -connect ${HOST}:993 -quiet
        expect "*OK*" {
            send "a login ${EMAIL} \"${PASS}\"\r"
        }
        expect {
            "*OK*" {
                puts "‚úÖ ${EMAIL} - ${HOST}: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
            }
            "*NO*" {
                puts "‚ùå ${EMAIL} - ${HOST}: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)"
            }
            timeout {
                puts "‚ùå ${EMAIL} - ${HOST}: –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
            }
            eof {
                puts "‚ùå ${EMAIL} - ${HOST}: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ"
            }
        }
        catch wait result
        exit 0
EOF
}

# –ß—Ç–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
mapfile -t ACCOUNTS < <(tail -n +2 "$ACCOUNTS_FILE")

for LINE in "${ACCOUNTS[@]}"; do
    IFS=',' read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP <<< "$LINE"
    # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ —É –ø–∞—Ä–æ–ª—è, –µ—Å–ª–∏ –µ—Å—Ç—å
    SRC_PASS=$(echo "$SRC_PASS" | sed 's/^"\(.*\)"$/\1/')
    DST_PASS=$(echo "$DST_PASS" | sed 's/^"\(.*\)"$/\1/')
    check_auth "$SRC_EMAIL" "$SRC_IMAP" "$SRC_PASS" &
    check_auth "$DST_EMAIL" "$DST_IMAP" "$DST_PASS" &
done

wait
echo "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:"
cat "$AUTH_LOG"

if grep -q "‚ùå" "$AUTH_LOG"; then
    echo "‚ö† –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!"
fi

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –ø–æ—á—Ç—ã? (y/n): " CONFIRM
[[ "$CONFIRM" != "y" ]] && echo "‚õî –ü–µ—Ä–µ–Ω–æ—Å –æ—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º." && exit 0

echo "üöÄ –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ–Ω–æ—Å–∞: $(date)"

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ—á—Ç—ã
start_transfer() {
    local SRC_EMAIL="$1"
    local SRC_IMAP="$2"
    local SRC_PASS="$3"
    local DST_EMAIL="$4"
    local DST_PASS="$5"
    local DST_IMAP="$6"
    local LOG_FILE="$LOG_DIR/$(echo $SRC_EMAIL | tr '@.' '__').log"

    echo "üöÄ –°—Ç–∞—Ä—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞: $SRC_EMAIL -> $DST_EMAIL"

    imapsync \
        --host1 "$SRC_IMAP" --user1 "$SRC_EMAIL" --password1 "$SRC_PASS" --ssl1 \
        --host2 "$DST_IMAP" --user2 "$DST_EMAIL" --password2 "$DST_PASS" --ssl2 \
        --automap --skipcrossduplicates --useuid --nofoldersizes \
        --logfile "$LOG_FILE" \
        > "$LOG_FILE" 2>&1 &

    echo "$!" >> "$LOG_DIR/pids"
}

> "$LOG_DIR/pids"

for LINE in "${ACCOUNTS[@]}"; do
    IFS=',' read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP <<< "$LINE"
    SRC_PASS=$(echo "$SRC_PASS" | sed 's/^"\(.*\)"$/\1/')
    DST_PASS=$(echo "$DST_PASS" | sed 's/^"\(.*\)"$/\1/')

    start_transfer "$SRC_EMAIL" "$SRC_IMAP" "$SRC_PASS" "$DST_EMAIL" "$DST_PASS" "$DST_IMAP"

    ((COUNTER++))
    if (( COUNTER % MAX_PARALLEL == 0 )); then
        wait
    fi
done

wait

echo "‚úÖ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –û–±—â–µ–µ –≤—Ä–µ–º—è: $(date)"
echo "üìÇ –õ–æ–≥–∏ –≤ –ø–∞–ø–∫–µ: $LOG_DIR"
