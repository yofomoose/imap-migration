#!/bin/bash

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
MAX_PARALLEL=5
LOG_DIR="logs"
CSV_FILE="accounts.txt"
AUTH_CHECK_LOG="auth_check.log"
TRANSFERRED_LOG="transferred.log"
DOCKER_IMAGE="gilleslamiral/imapsync"

mkdir -p "$LOG_DIR"
> "$AUTH_CHECK_LOG"
> "$TRANSFERRED_LOG"

echo "üîç –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $(date -u)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    apt update && apt install -y docker.io
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—Ä–∞–∑–∞ imapsync
if ! docker image ls | grep -q "$DOCKER_IMAGE"; then
    echo "–û–±—Ä–∞–∑ imapsync –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞—é..."
    docker pull $DOCKER_IMAGE
fi

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
check_auth() {
    local email="$1"
    local server="$2"
    local pass="$3"

    expect -c "
        log_user 0
        spawn openssl s_client -crlf -connect $server:993
        expect \"OK\"
        send \"a login $email \\\"$pass\\\"\r\"
        expect {
            \"OK\" {
                puts \"‚úÖ $email - $server: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞\" >> $AUTH_CHECK_LOG
                exit 0
            }
            \"NO\" {
                puts \"‚ùå $email - $server: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)\" >> $AUTH_CHECK_LOG
                exit 1
            }
            timeout {
                puts \"‚è± $email - $server: –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\" >> $AUTH_CHECK_LOG
                exit 2
            }
        }
    "
}

# –ß—Ç–µ–Ω–∏–µ CSV –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
mapfile -t valid_accounts < <(
    while IFS=, read -r src_email src_imap src_pass dst_email dst_pass dst_imap; do
        src_pass=${src_pass//\"/}
        dst_pass=${dst_pass//\"/}
        if check_auth "$src_email" "$src_imap" "$src_pass" && check_auth "$dst_email" "$dst_imap" "$dst_pass"; then
            echo "$src_email,$src_imap,$src_pass,$dst_email,$dst_pass,$dst_imap"
        fi
    done < <(tail -n +1 "$CSV_FILE" | sed 's/\r//' | sed 's/^"//;s/"$//' | sed 's/","/,/g')
)

echo
echo "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:"
cat "$AUTH_CHECK_LOG"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
if grep -q "‚ùå" "$AUTH_CHECK_LOG" || grep -q "‚è±" "$AUTH_CHECK_LOG"; then
    echo
    read -p "‚ùó –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –¥–ª—è –ø—Ä–æ—à–µ–¥—à–∏—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é? [y/N]: " confirm
    [[ "$confirm" =~ ^[Yy]$ ]] || exit 1
fi

echo "üöÄ –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ–Ω–æ—Å–∞: $(date -u)"
START_TIME=$(date +%s)

COUNTER=0
PIDS=()

for line in "${valid_accounts[@]}"; do
    IFS=, read -r src_email src_imap src_pass dst_email dst_pass dst_imap <<< "$line"

    log_file="$LOG_DIR/$(echo "$src_email" | tr '@.' '_').log"
    echo "üöÄ –°—Ç–∞—Ä—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞: $src_email -> $dst_email (PID –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω)"

    docker run --rm \
        -v "$(pwd):/data" \
        --user "$(id -u):$(id -g)" \
        "$DOCKER_IMAGE" \
        imapsync \
        --host1 "$src_imap" --user1 "$src_email" --password1 "$src_pass" --ssl1 --port1 993 --authmech1 LOGIN \
        --host2 "$dst_imap" --user2 "$dst_email" --password2 "$dst_pass" --ssl2 --port2 993 --authmech2 LOGIN \
        --automap --skipcrossduplicates --useuid --nofoldersizes \
        --log /data/"$log_file" &
    
    pid=$!
    PIDS+=($pid)
    ((COUNTER++))

    if (( COUNTER % MAX_PARALLEL == 0 )); then
        wait "${PIDS[@]}"
        PIDS=()
    fi
done

# –ñ–¥–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
wait "${PIDS[@]}"

END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

echo
echo "‚úÖ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –û–±—â–µ–µ –≤—Ä–µ–º—è: $DURATION —Å–µ–∫—É–Ω–¥ (~$((DURATION / 60)) –º–∏–Ω—É—Ç)"
echo "üìÇ –õ–æ–≥–∏ –≤ –ø–∞–ø–∫–µ: $LOG_DIR"
echo

# –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
echo "üìä –û–±—ä—ë–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:"
grep "Transferred:" "$LOG_DIR"/*.log | awk -F ':' '{print $2}' | paste -sd+ - | bc | awk '{printf "%.2f MB\n", $1/1024}'
