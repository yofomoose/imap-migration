#!/bin/bash

set -e

MAX_PARALLEL=5
COUNTER=0

ACCOUNTS_FILE="accounts.csv"
LOGS_DIR="logs"
AUTH_LOG="auth_check.log"

mkdir -p "$LOGS_DIR"
> "$AUTH_LOG"

START_TIME=$(date)

echo "üîç –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $START_TIME"

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
while IFS=',' read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP; do
    SRC_PASS=$(echo "$SRC_PASS" | sed 's/^"//;s/"$//')
    DST_PASS=$(echo "$DST_PASS" | sed 's/^"//;s/"$//')

    for side in src dst; do
        if [ "$side" == "src" ]; then
            EMAIL="$SRC_EMAIL"
            IMAP="$SRC_IMAP"
            PASS="$SRC_PASS"
        else
            EMAIL="$DST_EMAIL"
            IMAP="$DST_IMAP"
            PASS="$DST_PASS"
        fi

        expect <<EOF > /dev/null 2>&1
        set timeout 10
        spawn openssl s_client -crlf -quiet -connect $IMAP:993
        expect "*OK*"
        send "a login $EMAIL \"$PASS\"
"
        expect {
            "OK" {
                puts "‚úÖ $EMAIL - $IMAP: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
                puts "‚úÖ $EMAIL - $IMAP: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞" >> "$AUTH_LOG"
            }
            "NO" {
                puts "‚ùå $EMAIL - $IMAP: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)"
                puts "‚ùå $EMAIL - $IMAP: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)" >> "$AUTH_LOG"
            }
            timeout {
                puts "‚ùå $EMAIL - $IMAP: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Ç–∞–π–º–∞—É—Ç)"
                puts "‚ùå $EMAIL - $IMAP: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Ç–∞–π–º–∞—É—Ç)" >> "$AUTH_LOG"
            }
        }
        EOF

    done
done < <(tail -n +1 "$ACCOUNTS_FILE")

echo ""
echo "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:"
cat "$AUTH_LOG"

# –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å? (y/n): " CONFIRM
if [[ "$CONFIRM" != "y" ]]; then
    echo "‚õî –ü–µ—Ä–µ–Ω–æ—Å –æ—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
    exit 0
fi

echo "üöÄ –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ–Ω–æ—Å–∞: $(date)"

# –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–Ω–æ—Å–∞
while IFS=',' read -r SRC_EMAIL SRC_IMAP SRC_PASS DST_EMAIL DST_PASS DST_IMAP; do
    SRC_PASS=$(echo "$SRC_PASS" | sed 's/^"//;s/"$//')
    DST_PASS=$(echo "$DST_PASS" | sed 's/^"//;s/"$//')

    LOG_FILE="$LOGS_DIR/$(echo "$SRC_EMAIL" | tr '@' '_' | tr '.' '_').log"
    echo "üöÄ –°—Ç–∞—Ä—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞: $SRC_EMAIL -> $DST_EMAIL"

    docker run --rm -v "$(pwd):/data" gilleslamiral/imapsync imapsync \
        --host1 "$SRC_IMAP" --user1 "$SRC_EMAIL" --password1 "$SRC_PASS" --ssl1 \
        --host2 "$DST_IMAP" --user2 "$DST_EMAIL" --password2 "$DST_PASS" --ssl2 \
        --automap --skipcrossduplicates --useuid --nofoldersizes \
        --logfile "/data/$LOG_FILE" &

    ((COUNTER++))
    if (( COUNTER % MAX_PARALLEL == 0 )); then
        wait
    fi
done < <(tail -n +1 "$ACCOUNTS_FILE")

wait

END_TIME=$(date)
echo "‚úÖ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –í—Ä–µ–º—è: $START_TIME ‚Äî $END_TIME"
echo "üìÇ –õ–æ–≥–∏ –≤ –ø–∞–ø–∫–µ: $LOGS_DIR"
